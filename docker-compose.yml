version: '3'
services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    restart: always
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: ${MY_HOST}
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      #nome:partition:replica
      KAFKA_CREATE_TOPICS: "library-events:4:2"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      #SSL SETUP
      KAFKA_LISTENERS: PLAINTEXT://:9092,SSL://:9094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,SSL://kafka:9094
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ''
      KAFKA_SSL_CLIENT_AUTH: 'required'
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: 'SSL'
      KAFKA_SSL_KEYSTORE_LOCATION: '/etc/ca-certificates/server.keystore.jks'
      KAFKA_SSL_KEYSTORE_PASSWORD: '123456789'
      KAFKA_SSL_KEY_PASSWORD: '123456789'
      KAFKA_SSL_TRUSTSTORE_PASSWORD: '123456789'
      KAFKA_SSL_TRUSTSTORE_LOCATION: '/etc/ca-certificates/client.truststore.jks'
    volumes: 
      - ./certs/:/etc/ca-certificates/
      - ./client-ssl.properties:/opt/kafka/bin/client-ssl.properties
  kafka1:
    image: wurstmeister/kafka
    restart: always
    ports:
      - "9093:9092"
      - "9095:9095"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ADVERTISED_HOST_NAME: ${MY_HOST}
      KAFKA_ADVERTISED_PORT: 9093
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      #SSL SETUP
      KAFKA_LISTENERS: PLAINTEXT://:9093,SSL://:9095
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9093,SSL://kafka1:9095
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ''
      KAFKA_SSL_CLIENT_AUTH: 'required'
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: 'SSL'
      KAFKA_SSL_KEYSTORE_LOCATION: '/etc/ca-certificates/server.keystore.jks'
      KAFKA_SSL_KEYSTORE_PASSWORD: '123456789'
      KAFKA_SSL_KEY_PASSWORD: '123456789'
      KAFKA_SSL_TRUSTSTORE_PASSWORD: '123456789'
      KAFKA_SSL_TRUSTSTORE_LOCATION: '/etc/ca-certificates/client.truststore.jks'
    volumes: 
      - ./certs/:/etc/ca-certificates/
      - ./client-ssl.properties:/opt/kafka/bin/client-ssl.properties
    depends_on: 
      - kafka
  mongo:
    image: mongo
    networks:
      - net-backend
    container_name: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: producer
      MONGO_INITDB_ROOT_PASSWORD: 1234
      MONGO_INITDB_DATABASE: producer-db
    ports:
      - 27017:27017
    volumes: 
      - ./mongo-script.js:/docker-entrypoint-initdb.d/mongo-script.js
  mongo-express:
    image: mongo-express
    networks:
      - net-backend
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: producer
      ME_CONFIG_MONGODB_ADMINPASSWORD: 1234
  producer:
    image: jonasgama/example-producer:latest
    networks:
      - net-backend
    restart: always
    ports:
      - 9000:8080
    volumes: 
      - ./certs/:/certs/
    depends_on:
      - mongo
    links:
      - mongo

networks:
  net-backend: